name: Check Pull Request

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - edited
      - reopened
      - synchronize
      - ready_for_review

jobs:
  pr-validator:
    name: Run Pull Request Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test code and Create Test Coverage Reports
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
      - run: |
          npm ci
          npm run format:check
          npm run lint
          npm test

      - name: Test Docker Image Build
        run: |
          set +e
          docker build --no-cache --tag cdp-node-backend-template .
          exit $?

      - name: Notify Slack on PR Status
        if: always()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "Pull Request Status Update",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "ðŸš€ Pull Request Status Update"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*PR:*\n<${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Author:*\n${{ github.event.pull_request.user.login }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Status:*\n${{ job.status }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n${{ github.event.pull_request.head.ref }} â†’ ${{ github.event.pull_request.base.ref }}"
                    }
                  ]
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "ðŸ”— <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Workflow Run>"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

#      - name: SonarCloud Scan
#        if: github.actor != 'dependabot[bot]'
#        uses: SonarSource/sonarcloud-github-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
